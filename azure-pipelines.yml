trigger:
  - main  # Cambia por la rama que deseas usar

pool: Default  # Asegúrate que esto coincide con tu agente auto-hospedado

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Compilar aplicación web'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'webapp'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Desplegar a Azure App Service'
  dependsOn: Build
  jobs:
  - deployment: DeployJob
    displayName: 'Deployment Job'
    environment: 'prod' # Cambia por tu entorno creado en Azure DevOps si es necesario
    pool: Default # Usa tu agente auto-hospedado
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'webapp'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure para estudiantes: Starter(3ad58780-797f-4bc4-82a4-ef66cbb5ba92)' # Reemplaza por tu suscripción
              appType: 'webApp'
              WebAppName: 'tailspint' # Reemplaza por el nombre de tu App Service
              packageForLinux: '$(System.ArtifactsDirectory)/webapp/*.zip'